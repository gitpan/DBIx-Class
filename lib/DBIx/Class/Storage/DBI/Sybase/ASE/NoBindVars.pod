=for comment POD_DERIVED_INDEX_GENERATED
The following documentation is automatically generated.  Please do not edit
this file, but rather the original, inline with DBIx::Class::Storage::DBI::Sybase::ASE::NoBindVars
at lib/DBIx/Class/Storage/DBI/Sybase/ASE/NoBindVars.pm
(on the system that originally ran this).
If you do edit this file, and don't want your changes to be removed, make
sure you change the first line.

=cut

=head1 NAME

DBIx::Class::Storage::DBI::Sybase::ASE::NoBindVars - Storage::DBI subclass for
Sybase ASE without placeholder support

=head1 DESCRIPTION

If you're using this driver then your version of Sybase or the libraries you
use to connect to it do not support placeholders.

You can also enable this driver explicitly using:

  my $schema = SchemaClass->clone;
  $schema->storage_type('::DBI::Sybase::ASE::NoBindVars');
  $schema->connect($dsn, $user, $pass, \%opts);

See the discussion in L<< DBD::Sybase/Using ? Placeholders & bind parameters to
$sth->execute >> for details on the pros and cons of using placeholders.

One advantage of not using placeholders is that C<select @@identity> will work
for obtaining the last insert id of an C<IDENTITY> column, instead of having to
do C<select max(col)> in a transaction as the base Sybase driver does.

When using this driver, bind variables will be interpolated (properly quoted of
course) into the SQL query itself, without using placeholders.

The caching of prepared statements is also explicitly disabled, as the
interpolation renders it useless.

=head1 INHERITED METHODS

=over 4

=item L<DBIx::Class::Storage::DBI::NoBindVars>

L<connect_info|DBIx::Class::Storage::DBI::NoBindVars/connect_info>

=item L<DBIx::Class::Storage::DBI::Sybase::ASE>

L<auto_cast|DBIx::Class::Storage::DBI::Sybase::ASE/auto_cast>, L<auto_savepoint|DBIx::Class::Storage::DBI::Sybase::ASE/auto_savepoint>, L<connect_call_blob_setup|DBIx::Class::Storage::DBI::Sybase::ASE/connect_call_blob_setup>, L<connect_call_datetime_setup|DBIx::Class::Storage::DBI::Sybase::ASE/connect_call_datetime_setup>, L<connect_call_set_auto_cast|DBIx::Class::Storage::DBI::Sybase::ASE/connect_call_set_auto_cast>, L<cursor_class|DBIx::Class::Storage::DBI::Sybase::ASE/cursor_class>, L<debug|DBIx::Class::Storage::DBI::Sybase::ASE/debug>, L<debugobj|DBIx::Class::Storage::DBI::Sybase::ASE/debugobj>, L<disable_sth_caching|DBIx::Class::Storage::DBI::Sybase::ASE/disable_sth_caching>, L<disconnect|DBIx::Class::Storage::DBI::Sybase::ASE/disconnect>, L<insert|DBIx::Class::Storage::DBI::Sybase::ASE/insert>, L<insert_bulk|DBIx::Class::Storage::DBI::Sybase::ASE/insert_bulk>, L<last_insert_id|DBIx::Class::Storage::DBI::Sybase::ASE/last_insert_id>, L<schema|DBIx::Class::Storage::DBI::Sybase::ASE/schema>, L<unsafe|DBIx::Class::Storage::DBI::Sybase::ASE/unsafe>, L<update|DBIx::Class::Storage::DBI::Sybase::ASE/update>

=item L<DBIx::Class::Storage::DBI>

L<bind_attribute_by_data_type|DBIx::Class::Storage::DBI/bind_attribute_by_data_type>, L<build_datetime_parser|DBIx::Class::Storage::DBI/build_datetime_parser>, L<columns_info_for|DBIx::Class::Storage::DBI/columns_info_for>, L<connect_call_do_sql|DBIx::Class::Storage::DBI/connect_call_do_sql>, L<connected|DBIx::Class::Storage::DBI/connected>, L<create_ddl_dir|DBIx::Class::Storage::DBI/create_ddl_dir>, L<datetime_parser|DBIx::Class::Storage::DBI/datetime_parser>, L<datetime_parser_type|DBIx::Class::Storage::DBI/datetime_parser_type>, L<dbh|DBIx::Class::Storage::DBI/dbh>, L<dbh_do|DBIx::Class::Storage::DBI/dbh_do>, L<delete|DBIx::Class::Storage::DBI/delete>, L<deploy|DBIx::Class::Storage::DBI/deploy>, L<deployment_statements|DBIx::Class::Storage::DBI/deployment_statements>, L<disconnect_call_do_sql|DBIx::Class::Storage::DBI/disconnect_call_do_sql>, L<ensure_connected|DBIx::Class::Storage::DBI/ensure_connected>, L<get_dbms_capability|DBIx::Class::Storage::DBI/get_dbms_capability>, L<get_use_dbms_capability|DBIx::Class::Storage::DBI/get_use_dbms_capability>, L<is_datatype_numeric|DBIx::Class::Storage::DBI/is_datatype_numeric>, L<is_replicating|DBIx::Class::Storage::DBI/is_replicating>, L<lag_behind_master|DBIx::Class::Storage::DBI/lag_behind_master>, L<new|DBIx::Class::Storage::DBI/new>, L<on_connect_call|DBIx::Class::Storage::DBI/on_connect_call>, L<on_connect_do|DBIx::Class::Storage::DBI/on_connect_do>, L<on_disconnect_call|DBIx::Class::Storage::DBI/on_disconnect_call>, L<on_disconnect_do|DBIx::Class::Storage::DBI/on_disconnect_do>, L<relname_to_table_alias|DBIx::Class::Storage::DBI/relname_to_table_alias>, L<select|DBIx::Class::Storage::DBI/select>, L<select_single|DBIx::Class::Storage::DBI/select_single>, L<set_dbms_capability|DBIx::Class::Storage::DBI/set_dbms_capability>, L<set_use_dbms_capability|DBIx::Class::Storage::DBI/set_use_dbms_capability>, L<source_bind_attributes|DBIx::Class::Storage::DBI/source_bind_attributes>, L<sql_limit_dialect|DBIx::Class::Storage::DBI/sql_limit_dialect>, L<sql_maker|DBIx::Class::Storage::DBI/sql_maker>, L<sql_maker_class|DBIx::Class::Storage::DBI/sql_maker_class>, L<sql_name_sep|DBIx::Class::Storage::DBI/sql_name_sep>, L<sql_quote_char|DBIx::Class::Storage::DBI/sql_quote_char>, L<sqlt_type|DBIx::Class::Storage::DBI/sqlt_type>, L<sth|DBIx::Class::Storage::DBI/sth>, L<svp_begin|DBIx::Class::Storage::DBI/svp_begin>, L<svp_release|DBIx::Class::Storage::DBI/svp_release>, L<svp_rollback|DBIx::Class::Storage::DBI/svp_rollback>, L<txn_begin|DBIx::Class::Storage::DBI/txn_begin>, L<txn_commit|DBIx::Class::Storage::DBI/txn_commit>, L<txn_do|DBIx::Class::Storage::DBI/txn_do>, L<txn_rollback|DBIx::Class::Storage::DBI/txn_rollback>, L<with_deferred_fk_checks|DBIx::Class::Storage::DBI/with_deferred_fk_checks>

=item L<DBIx::Class::Storage>

L<cursor|DBIx::Class::Storage/cursor>, L<debugcb|DBIx::Class::Storage/debugcb>, L<debugfh|DBIx::Class::Storage/debugfh>, L<savepoints|DBIx::Class::Storage/savepoints>, L<set_schema|DBIx::Class::Storage/set_schema>, L<throw_exception|DBIx::Class::Storage/throw_exception>, L<transaction_depth|DBIx::Class::Storage/transaction_depth>, L<txn_scope_guard|DBIx::Class::Storage/txn_scope_guard>

=back

=head1 AUTHORS

See L<DBIx::Class/CONTRIBUTORS>.

=head1 LICENSE

You may distribute this code under the same terms as Perl itself.

